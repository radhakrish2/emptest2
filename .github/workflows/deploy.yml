name: Build, Package & Deploy to Google Cloud Run

on:
  push:
    branches:
      - main  # Change this if your main branch has a different name

jobs:
  build:
    name: Build JAR & Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Java 17 (or change version as needed)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      # Step 4: Build the JAR using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 5: Upload the generated JAR as an artifact (For debugging)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4  # Fixed missing action
        with:
          name: built-jar
          path: target/*.jar  # Uploads the built JAR

      # Step 6: Authenticate with Google Cloud
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Step 7: Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Step 8: Authenticate Docker with GCR
      - name: Configure Docker to use GCR
        run: gcloud auth configure-docker gcr.io

      # Step 9: Build and Push Docker Image to Google Container Registry
      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/myapp:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/myapp:latest

      # Step 10: Deploy to Google Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy myapp \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/myapp:latest \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated
